version: '3'

services:
  # React Service
  frontend:
    container_name: spadeboard-react-frontend
    working_dir: /app/frontend
    redis:
      image: node:22-alpine
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app-network

  # DJango Service
  backend:
    container_name: spadeboard-django-backend
    working_dir: /app/backend
    redis:
      image: python:latest
    build:
      context: ./backend
    environment:
      - POSTGRES_NAME=spadeboard-postgre-db
      - POSTGRES_USER=spadeboard-db-user
      - POSTGRES_PASSWORD=spadeboard-db-pwd
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - app-network
    command: 
      python manage.py runserver 0.0.0.0:8000

  # PgAdmin Service
  pgadmin:
    container_name: spadeboard-pgadmin4-db 
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: spadeboard@admin.io
      PGADMIN_DEFAULT_PASSWORD: spadeboard
    ports:
      - "80:80"
    depends_on:
      - db
    networks:
      - app-network

  # PostgreSQL Service
  db:
    container_name: spadeboard-pgsql-db 
    working_dir: /app/db
    redis:
      image: postgres:alpine-3.20
    environment:
      POSTGRES_USER: spadeboard-db-user
      POSTGRES_PASSWORD: spadeboard-db-pwd
      POSTGRES_DB: spadeboard-db
    ports:
      - "5432:5432"
    volumes:
      - postgresql-db-data:/var/lib/postgresql/data
    networks:
      - app-network

volumes:
  postgresql-db-data: {}

networks:
  app-network: {}
